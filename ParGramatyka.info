-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from ParGramatyka.y
-----------------------------------------------------------------------------


rule 43 is unused
rule 44 is unused
rule 45 is unused

terminal ',' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListFunctionDef                         (4)
	ListFunctionDef -> FunctionDef                     (5)
	ListFunctionDef -> FunctionDef ListFunctionDef     (6)
	FunctionDef -> 'func' Ident '()' Block             (7)
	Block -> '{' ListStatement '}'                     (8)
	ListStatement ->                                   (9)
	ListStatement -> Statement ListStatement           (10)
	Statement -> Type Ident '=' Expr ';'               (11)
	Statement -> Type Ident '::=' Expr ';'             (12)
	Statement -> Ident '=' Expr ';'                    (13)
	Statement -> 'print' '(' Expr ')' ';'              (14)
	Statement -> 'while' '(' Expr ')' Block            (15)
	Statement -> 'if' '(' Expr ')' Block 'else' Block   (16)
	Statement -> 'for' Type Ident '=' Expr 'to' Expr Block   (17)
	Statement -> Block                                 (18)
	Statement -> Expr ';'                              (19)
	Type -> 'int'                                      (20)
	Type -> 'string'                                   (21)
	Type -> 'boolean'                                  (22)
	Expr6 -> Ident                                     (23)
	Expr6 -> Integer                                   (24)
	Expr6 -> 'true'                                    (25)
	Expr6 -> 'false'                                   (26)
	Expr6 -> Ident '(' ')'                             (27)
	Expr6 -> String                                    (28)
	Expr6 -> '(' Expr ')'                              (29)
	Expr5 -> '-' Expr6                                 (30)
	Expr5 -> '!' Expr6                                 (31)
	Expr5 -> Expr6                                     (32)
	Expr4 -> Expr4 MulOp Expr5                         (33)
	Expr4 -> Expr5                                     (34)
	Expr3 -> Expr3 AddOp Expr4                         (35)
	Expr3 -> Expr4                                     (36)
	Expr2 -> Expr2 RelOp Expr3                         (37)
	Expr2 -> Expr3                                     (38)
	Expr1 -> Expr2 '&&' Expr1                          (39)
	Expr1 -> Expr2                                     (40)
	Expr -> Expr1 '||' Expr                            (41)
	Expr -> Expr1                                      (42)
	ListExpr ->                                        (43)
	ListExpr -> Expr                                   (44)
	ListExpr -> Expr ',' ListExpr                      (45)
	AddOp -> '+'                                       (46)
	AddOp -> '-'                                       (47)
	MulOp -> '*'                                       (48)
	MulOp -> '/'                                       (49)
	MulOp -> '%'                                       (50)
	RelOp -> '<'                                       (51)
	RelOp -> '<='                                      (52)
	RelOp -> '>'                                       (53)
	RelOp -> '>='                                      (54)
	RelOp -> '=='                                      (55)
	RelOp -> '!='                                      (56)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	'()'           { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'/'            { PT _ (TS _ 12) }
	'::='          { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'boolean'      { PT _ (TS _ 21) }
	'else'         { PT _ (TS _ 22) }
	'false'        { PT _ (TS _ 23) }
	'for'          { PT _ (TS _ 24) }
	'func'         { PT _ (TS _ 25) }
	'if'           { PT _ (TS _ 26) }
	'int'          { PT _ (TS _ 27) }
	'print'        { PT _ (TS _ 28) }
	'string'       { PT _ (TS _ 29) }
	'to'           { PT _ (TS _ 30) }
	'true'         { PT _ (TS _ 31) }
	'while'        { PT _ (TS _ 32) }
	'{'            { PT _ (TS _ 33) }
	'||'           { PT _ (TS _ 34) }
	'}'            { PT _ (TS _ 35) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	ListFunctionDef rules 5, 6
	FunctionDef     rule  7
	Block           rule  8
	ListStatement   rules 9, 10
	Statement       rules 11, 12, 13, 14, 15, 16, 17, 18, 19
	Type            rules 20, 21, 22
	Expr6           rules 23, 24, 25, 26, 27, 28, 29
	Expr5           rules 30, 31, 32
	Expr4           rules 33, 34
	Expr3           rules 35, 36
	Expr2           rules 37, 38
	Expr1           rules 39, 40
	Expr            rules 41, 42
	ListExpr        rules 43, 44, 45
	AddOp           rules 46, 47
	MulOp           rules 48, 49, 50
	RelOp           rules 51, 52, 53, 54, 55, 56

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'func'         shift, and enter state 6

	Program        goto state 3
	ListFunctionDefgoto state 4
	FunctionDef    goto state 5

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	'()'           reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	'::='          reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'to'           reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	Program -> ListFunctionDef .                        (rule 4)

	%eof           reduce using rule 4


State 5

	ListFunctionDef -> FunctionDef .                    (rule 5)
	ListFunctionDef -> FunctionDef . ListFunctionDef    (rule 6)

	'func'         shift, and enter state 6
	%eof           reduce using rule 5

	ListFunctionDefgoto state 8
	FunctionDef    goto state 5

State 6

	FunctionDef -> 'func' . Ident '()' Block            (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 7

State 7

	FunctionDef -> 'func' Ident . '()' Block            (rule 7)

	'()'           shift, and enter state 9


State 8

	ListFunctionDef -> FunctionDef ListFunctionDef .    (rule 6)

	%eof           reduce using rule 6


State 9

	FunctionDef -> 'func' Ident '()' . Block            (rule 7)

	'{'            shift, and enter state 11

	Block          goto state 10

State 10

	FunctionDef -> 'func' Ident '()' Block .            (rule 7)

	'func'         reduce using rule 7
	%eof           reduce using rule 7


State 11

	Block -> '{' . ListStatement '}'                    (rule 8)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'boolean'      shift, and enter state 29
	'false'        shift, and enter state 30
	'for'          shift, and enter state 31
	'if'           shift, and enter state 32
	'int'          shift, and enter state 33
	'print'        shift, and enter state 34
	'string'       shift, and enter state 35
	'true'         shift, and enter state 36
	'while'        shift, and enter state 37
	'{'            shift, and enter state 11
	'}'            reduce using rule 9
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 12
	Integer        goto state 13
	String         goto state 14
	Block          goto state 15
	ListStatement  goto state 16
	Statement      goto state 17
	Type           goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 25

State 12

	Statement -> Ident . '=' Expr ';'                   (rule 13)
	Expr6 -> Ident .                                    (rule 23)
	Expr6 -> Ident . '(' ')'                            (rule 27)

	'!='           reduce using rule 23
	'%'            reduce using rule 23
	'&&'           reduce using rule 23
	'('            shift, and enter state 68
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'/'            reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'='            shift, and enter state 69
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'||'           reduce using rule 23


State 13

	Expr6 -> Integer .                                  (rule 24)

	'!='           reduce using rule 24
	'%'            reduce using rule 24
	'&&'           reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'/'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'to'           reduce using rule 24
	'{'            reduce using rule 24
	'||'           reduce using rule 24


State 14

	Expr6 -> String .                                   (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'&&'           reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'/'            reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'to'           reduce using rule 28
	'{'            reduce using rule 28
	'||'           reduce using rule 28


State 15

	Statement -> Block .                                (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	'boolean'      reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'print'        reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 16

	Block -> '{' ListStatement . '}'                    (rule 8)

	'}'            shift, and enter state 67


State 17

	ListStatement -> Statement . ListStatement          (rule 10)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'boolean'      shift, and enter state 29
	'false'        shift, and enter state 30
	'for'          shift, and enter state 31
	'if'           shift, and enter state 32
	'int'          shift, and enter state 33
	'print'        shift, and enter state 34
	'string'       shift, and enter state 35
	'true'         shift, and enter state 36
	'while'        shift, and enter state 37
	'{'            shift, and enter state 11
	'}'            reduce using rule 9
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 12
	Integer        goto state 13
	String         goto state 14
	Block          goto state 15
	ListStatement  goto state 66
	Statement      goto state 17
	Type           goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 25

State 18

	Statement -> Type . Ident '=' Expr ';'              (rule 11)
	Statement -> Type . Ident '::=' Expr ';'            (rule 12)

	L_Ident        shift, and enter state 2

	Ident          goto state 65

State 19

	Expr5 -> Expr6 .                                    (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'to'           reduce using rule 32
	'{'            reduce using rule 32
	'||'           reduce using rule 32


State 20

	Expr4 -> Expr5 .                                    (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'to'           reduce using rule 34
	'{'            reduce using rule 34
	'||'           reduce using rule 34


State 21

	Expr4 -> Expr4 . MulOp Expr5                        (rule 33)
	Expr3 -> Expr4 .                                    (rule 36)

	'!='           reduce using rule 36
	'%'            shift, and enter state 62
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            shift, and enter state 63
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'/'            shift, and enter state 64
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'to'           reduce using rule 36
	'{'            reduce using rule 36
	'||'           reduce using rule 36

	MulOp          goto state 61

State 22

	Expr3 -> Expr3 . AddOp Expr4                        (rule 35)
	Expr2 -> Expr3 .                                    (rule 38)

	'!='           reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'+'            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'to'           reduce using rule 38
	'{'            reduce using rule 38
	'||'           reduce using rule 38

	AddOp          goto state 58

State 23

	Expr2 -> Expr2 . RelOp Expr3                        (rule 37)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 39)
	Expr1 -> Expr2 .                                    (rule 40)

	'!='           shift, and enter state 51
	'&&'           shift, and enter state 52
	')'            reduce using rule 40
	';'            reduce using rule 40
	'<'            shift, and enter state 53
	'<='           shift, and enter state 54
	'=='           shift, and enter state 55
	'>'            shift, and enter state 56
	'>='           shift, and enter state 57
	'to'           reduce using rule 40
	'{'            reduce using rule 40
	'||'           reduce using rule 40

	RelOp          goto state 50

State 24

	Expr -> Expr1 . '||' Expr                           (rule 41)
	Expr -> Expr1 .                                     (rule 42)

	')'            reduce using rule 42
	';'            reduce using rule 42
	'to'           reduce using rule 42
	'{'            reduce using rule 42
	'||'           shift, and enter state 49


State 25

	Statement -> Expr . ';'                             (rule 19)

	';'            shift, and enter state 48


State 26

	Expr5 -> '!' . Expr6                                (rule 31)

	'('            shift, and enter state 27
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 47

State 27

	Expr6 -> '(' . Expr ')'                             (rule 29)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 46

State 28

	Expr5 -> '-' . Expr6                                (rule 30)

	'('            shift, and enter state 27
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 45

State 29

	Type -> 'boolean' .                                 (rule 22)

	L_Ident        reduce using rule 22


State 30

	Expr6 -> 'false' .                                  (rule 26)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'&&'           reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'/'            reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'to'           reduce using rule 26
	'{'            reduce using rule 26
	'||'           reduce using rule 26


State 31

	Statement -> 'for' . Type Ident '=' Expr 'to' Expr Block    (rule 17)

	'boolean'      shift, and enter state 29
	'int'          shift, and enter state 33
	'string'       shift, and enter state 35

	Type           goto state 43

State 32

	Statement -> 'if' . '(' Expr ')' Block 'else' Block    (rule 16)

	'('            shift, and enter state 42


State 33

	Type -> 'int' .                                     (rule 20)

	L_Ident        reduce using rule 20


State 34

	Statement -> 'print' . '(' Expr ')' ';'             (rule 14)

	'('            shift, and enter state 41


State 35

	Type -> 'string' .                                  (rule 21)

	L_Ident        reduce using rule 21


State 36

	Expr6 -> 'true' .                                   (rule 25)

	'!='           reduce using rule 25
	'%'            reduce using rule 25
	'&&'           reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'/'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'to'           reduce using rule 25
	'{'            reduce using rule 25
	'||'           reduce using rule 25


State 37

	Statement -> 'while' . '(' Expr ')' Block           (rule 15)

	'('            shift, and enter state 40


State 38

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'to'           reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2


State 39

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'to'           reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3


State 40

	Statement -> 'while' '(' . Expr ')' Block           (rule 15)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 83

State 41

	Statement -> 'print' '(' . Expr ')' ';'             (rule 14)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 82

State 42

	Statement -> 'if' '(' . Expr ')' Block 'else' Block    (rule 16)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 81

State 43

	Statement -> 'for' Type . Ident '=' Expr 'to' Expr Block    (rule 17)

	L_Ident        shift, and enter state 2

	Ident          goto state 80

State 44

	Expr6 -> Ident .                                    (rule 23)
	Expr6 -> Ident . '(' ')'                            (rule 27)

	'!='           reduce using rule 23
	'%'            reduce using rule 23
	'&&'           reduce using rule 23
	'('            shift, and enter state 68
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'/'            reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'to'           reduce using rule 23
	'{'            reduce using rule 23
	'||'           reduce using rule 23


State 45

	Expr5 -> '-' Expr6 .                                (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'&&'           reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'/'            reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'to'           reduce using rule 30
	'{'            reduce using rule 30
	'||'           reduce using rule 30


State 46

	Expr6 -> '(' Expr . ')'                             (rule 29)

	')'            shift, and enter state 79


State 47

	Expr5 -> '!' Expr6 .                                (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'/'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'to'           reduce using rule 31
	'{'            reduce using rule 31
	'||'           reduce using rule 31


State 48

	Statement -> Expr ';' .                             (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	'boolean'      reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'print'        reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 49

	Expr -> Expr1 '||' . Expr                           (rule 41)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 78

State 50

	Expr2 -> Expr2 RelOp . Expr3                        (rule 37)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 77

State 51

	RelOp -> '!=' .                                     (rule 56)

	'!'            reduce using rule 56
	'('            reduce using rule 56
	'-'            reduce using rule 56
	'false'        reduce using rule 56
	'true'         reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 52

	Expr1 -> Expr2 '&&' . Expr1                         (rule 39)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 76

State 53

	RelOp -> '<' .                                      (rule 51)

	'!'            reduce using rule 51
	'('            reduce using rule 51
	'-'            reduce using rule 51
	'false'        reduce using rule 51
	'true'         reduce using rule 51
	L_Ident        reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51


State 54

	RelOp -> '<=' .                                     (rule 52)

	'!'            reduce using rule 52
	'('            reduce using rule 52
	'-'            reduce using rule 52
	'false'        reduce using rule 52
	'true'         reduce using rule 52
	L_Ident        reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52


State 55

	RelOp -> '==' .                                     (rule 55)

	'!'            reduce using rule 55
	'('            reduce using rule 55
	'-'            reduce using rule 55
	'false'        reduce using rule 55
	'true'         reduce using rule 55
	L_Ident        reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55


State 56

	RelOp -> '>' .                                      (rule 53)

	'!'            reduce using rule 53
	'('            reduce using rule 53
	'-'            reduce using rule 53
	'false'        reduce using rule 53
	'true'         reduce using rule 53
	L_Ident        reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53


State 57

	RelOp -> '>=' .                                     (rule 54)

	'!'            reduce using rule 54
	'('            reduce using rule 54
	'-'            reduce using rule 54
	'false'        reduce using rule 54
	'true'         reduce using rule 54
	L_Ident        reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54


State 58

	Expr3 -> Expr3 AddOp . Expr4                        (rule 35)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 75

State 59

	AddOp -> '+' .                                      (rule 46)

	'!'            reduce using rule 46
	'('            reduce using rule 46
	'-'            reduce using rule 46
	'false'        reduce using rule 46
	'true'         reduce using rule 46
	L_Ident        reduce using rule 46
	L_integ        reduce using rule 46
	L_quoted       reduce using rule 46


State 60

	AddOp -> '-' .                                      (rule 47)

	'!'            reduce using rule 47
	'('            reduce using rule 47
	'-'            reduce using rule 47
	'false'        reduce using rule 47
	'true'         reduce using rule 47
	L_Ident        reduce using rule 47
	L_integ        reduce using rule 47
	L_quoted       reduce using rule 47


State 61

	Expr4 -> Expr4 MulOp . Expr5                        (rule 33)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 74

State 62

	MulOp -> '%' .                                      (rule 50)

	'!'            reduce using rule 50
	'('            reduce using rule 50
	'-'            reduce using rule 50
	'false'        reduce using rule 50
	'true'         reduce using rule 50
	L_Ident        reduce using rule 50
	L_integ        reduce using rule 50
	L_quoted       reduce using rule 50


State 63

	MulOp -> '*' .                                      (rule 48)

	'!'            reduce using rule 48
	'('            reduce using rule 48
	'-'            reduce using rule 48
	'false'        reduce using rule 48
	'true'         reduce using rule 48
	L_Ident        reduce using rule 48
	L_integ        reduce using rule 48
	L_quoted       reduce using rule 48


State 64

	MulOp -> '/' .                                      (rule 49)

	'!'            reduce using rule 49
	'('            reduce using rule 49
	'-'            reduce using rule 49
	'false'        reduce using rule 49
	'true'         reduce using rule 49
	L_Ident        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49


State 65

	Statement -> Type Ident . '=' Expr ';'              (rule 11)
	Statement -> Type Ident . '::=' Expr ';'            (rule 12)

	'::='          shift, and enter state 72
	'='            shift, and enter state 73


State 66

	ListStatement -> Statement ListStatement .          (rule 10)

	'}'            reduce using rule 10


State 67

	Block -> '{' ListStatement '}' .                    (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	'boolean'      reduce using rule 8
	'else'         reduce using rule 8
	'false'        reduce using rule 8
	'for'          reduce using rule 8
	'func'         reduce using rule 8
	'if'           reduce using rule 8
	'int'          reduce using rule 8
	'print'        reduce using rule 8
	'string'       reduce using rule 8
	'true'         reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 68

	Expr6 -> Ident '(' . ')'                            (rule 27)

	')'            shift, and enter state 71


State 69

	Statement -> Ident '=' . Expr ';'                   (rule 13)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 70

State 70

	Statement -> Ident '=' Expr . ';'                   (rule 13)

	';'            shift, and enter state 90


State 71

	Expr6 -> Ident '(' ')' .                            (rule 27)

	'!='           reduce using rule 27
	'%'            reduce using rule 27
	'&&'           reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'/'            reduce using rule 27
	';'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'to'           reduce using rule 27
	'{'            reduce using rule 27
	'||'           reduce using rule 27


State 72

	Statement -> Type Ident '::=' . Expr ';'            (rule 12)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 89

State 73

	Statement -> Type Ident '=' . Expr ';'              (rule 11)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 88

State 74

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'to'           reduce using rule 33
	'{'            reduce using rule 33
	'||'           reduce using rule 33


State 75

	Expr4 -> Expr4 . MulOp Expr5                        (rule 33)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 35)

	'!='           reduce using rule 35
	'%'            shift, and enter state 62
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            shift, and enter state 63
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'/'            shift, and enter state 64
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'to'           reduce using rule 35
	'{'            reduce using rule 35
	'||'           reduce using rule 35

	MulOp          goto state 61

State 76

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 39)

	')'            reduce using rule 39
	';'            reduce using rule 39
	'to'           reduce using rule 39
	'{'            reduce using rule 39
	'||'           reduce using rule 39


State 77

	Expr3 -> Expr3 . AddOp Expr4                        (rule 35)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 37)

	'!='           reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'+'            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'to'           reduce using rule 37
	'{'            reduce using rule 37
	'||'           reduce using rule 37

	AddOp          goto state 58

State 78

	Expr -> Expr1 '||' Expr .                           (rule 41)

	')'            reduce using rule 41
	';'            reduce using rule 41
	'to'           reduce using rule 41
	'{'            reduce using rule 41


State 79

	Expr6 -> '(' Expr ')' .                             (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'&&'           reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'/'            reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'to'           reduce using rule 29
	'{'            reduce using rule 29
	'||'           reduce using rule 29


State 80

	Statement -> 'for' Type Ident . '=' Expr 'to' Expr Block    (rule 17)

	'='            shift, and enter state 87


State 81

	Statement -> 'if' '(' Expr . ')' Block 'else' Block    (rule 16)

	')'            shift, and enter state 86


State 82

	Statement -> 'print' '(' Expr . ')' ';'             (rule 14)

	')'            shift, and enter state 85


State 83

	Statement -> 'while' '(' Expr . ')' Block           (rule 15)

	')'            shift, and enter state 84


State 84

	Statement -> 'while' '(' Expr ')' . Block           (rule 15)

	'{'            shift, and enter state 11

	Block          goto state 96

State 85

	Statement -> 'print' '(' Expr ')' . ';'             (rule 14)

	';'            shift, and enter state 95


State 86

	Statement -> 'if' '(' Expr ')' . Block 'else' Block    (rule 16)

	'{'            shift, and enter state 11

	Block          goto state 94

State 87

	Statement -> 'for' Type Ident '=' . Expr 'to' Expr Block    (rule 17)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 93

State 88

	Statement -> Type Ident '=' Expr . ';'              (rule 11)

	';'            shift, and enter state 92


State 89

	Statement -> Type Ident '::=' Expr . ';'            (rule 12)

	';'            shift, and enter state 91


State 90

	Statement -> Ident '=' Expr ';' .                   (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	'boolean'      reduce using rule 13
	'false'        reduce using rule 13
	'for'          reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'print'        reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13


State 91

	Statement -> Type Ident '::=' Expr ';' .            (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	'boolean'      reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'print'        reduce using rule 12
	'string'       reduce using rule 12
	'true'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12


State 92

	Statement -> Type Ident '=' Expr ';' .              (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	'boolean'      reduce using rule 11
	'false'        reduce using rule 11
	'for'          reduce using rule 11
	'if'           reduce using rule 11
	'int'          reduce using rule 11
	'print'        reduce using rule 11
	'string'       reduce using rule 11
	'true'         reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11


State 93

	Statement -> 'for' Type Ident '=' Expr . 'to' Expr Block    (rule 17)

	'to'           shift, and enter state 98


State 94

	Statement -> 'if' '(' Expr ')' Block . 'else' Block    (rule 16)

	'else'         shift, and enter state 97


State 95

	Statement -> 'print' '(' Expr ')' ';' .             (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	'boolean'      reduce using rule 14
	'false'        reduce using rule 14
	'for'          reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'print'        reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14


State 96

	Statement -> 'while' '(' Expr ')' Block .           (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	'boolean'      reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'print'        reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15


State 97

	Statement -> 'if' '(' Expr ')' Block 'else' . Block    (rule 16)

	'{'            shift, and enter state 11

	Block          goto state 100

State 98

	Statement -> 'for' Type Ident '=' Expr 'to' . Expr Block    (rule 17)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 30
	'true'         shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 38
	L_quoted       shift, and enter state 39

	Ident          goto state 44
	Integer        goto state 13
	String         goto state 14
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 99

State 99

	Statement -> 'for' Type Ident '=' Expr 'to' Expr . Block    (rule 17)

	'{'            shift, and enter state 11

	Block          goto state 101

State 100

	Statement -> 'if' '(' Expr ')' Block 'else' Block .    (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	'boolean'      reduce using rule 16
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'print'        reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 101

	Statement -> 'for' Type Ident '=' Expr 'to' Expr Block .    (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	'boolean'      reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'print'        reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 57
Number of terminals: 38
Number of non-terminals: 22
Number of states: 102
